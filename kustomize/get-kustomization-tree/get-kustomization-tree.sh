#!/bin/bash
set -e

DEFAULT_SEPARATOR=' '
kustomization_yml_find_pattern=".*/(Kustomization|kustomization\.ya?ml)$"

kustomization_root="$1"
kustomization_directory="$2"
separator="${3:-$DEFAULT_SEPARATOR}"

>&2 echo "root_directory: $kustomization_root"
>&2 echo "kustomization_directory: $kustomization_directory"
>&2 echo "separator: '$separator'"

kustomization_yaml()
{
    kustomization_root="$1"
    kustomization_directory="$2"

    # >&2 echo "(child) kustomization_directory: $kustomization_directory"

    result=()
    while IFS= read -r resource; do
        # >&2 echo "checking: $resource"
        if [[ ! "$resource" =~ .*.ya?ml$ ]]; then
            # directory
            child_result=$(kustomization_yaml $kustomization_root "$kustomization_directory/$resource")
            # >&2 echo "child_result: $child_result"
            result+=($child_result)
        fi
    done <<<$(yq e -o=j -I=0 '.resources[]' "$kustomization_root/$kustomization_directory/kustomization.yaml" | tr -d \")
    kustomization_yaml_path="$(realpath --relative-to $kustomization_root $kustomization_root/$kustomization_directory/kustomization.yaml)"
    # >&2 echo "kustomization.yaml changed: $kustomization_yaml_path"
    result+=($kustomization_yaml_path)

    echo ${result[@]}
}

result=()

>&2 echo "looking for kustomization.yaml in $kustomization_root/$kustomization_directory"

if [[ -f "$kustomization_root/$kustomization_directory/kustomization.yaml" ]]; then
    # validate the existing kustomization tree recursively
    child_result=($(kustomization_yaml $kustomization_root $kustomization_directory)) # visited
    # >&2 echo "child_result: ${child_result[@]}"

    result+=(${child_result[@]})
    # >&2 echo "result1: ${result[@]}"
else
    # kustomization.yaml will be autogenerated by flux
    >&2 echo "no kustomization.yaml found - assuming autogeneration"
    result+=($kustomization_directory)

fi

echo "${result[@]}" | tr "$separator" '\n' | sort -u | tr '\n' "$separator"






